{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dub_ceo/Desktop/spacesvr-starter/src/ideas/Builder12/layers/communication/visual/modifiers/FacePlayer.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { useLimiter } from \"spacesvr\";\n\nvar FacePlayer = function FacePlayer(props) {\n  _s();\n\n  var children = props.children,\n      _props$lockX = props.lockX,\n      lockX = _props$lockX === void 0 ? false : _props$lockX,\n      _props$lockY = props.lockY,\n      lockY = _props$lockY === void 0 ? false : _props$lockY,\n      _props$lockZ = props.lockZ,\n      lockZ = _props$lockZ === void 0 ? false : _props$lockZ;\n  var group = useRef();\n  var limiter = useLimiter(60);\n  useFrame(function (_ref) {\n    var clock = _ref.clock,\n        camera = _ref.camera;\n    if (!limiter.isReady(clock)) return;\n\n    if (group.current) {\n      var prev = {\n        x: group.current.rotation.x,\n        y: group.current.rotation.y,\n        z: group.current.rotation.z\n      };\n      group.current.lookAt(camera.position);\n      if (lockX) group.current.rotation.x = prev.x;\n      if (lockY) group.current.rotation.y = prev.y;\n      if (lockZ) group.current.rotation.z = prev.z;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(FacePlayer, \"XAmsb5r/igxXNykFSUz2WOKtqng=\", false, function () {\n  return [useLimiter, useFrame];\n});\n\n_c = FacePlayer;\nexport default FacePlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"FacePlayer\");","map":{"version":3,"sources":["/Users/dub_ceo/Desktop/spacesvr-starter/src/ideas/Builder12/layers/communication/visual/modifiers/FacePlayer.tsx"],"names":["useRef","useFrame","useLimiter","FacePlayer","props","children","lockX","lockY","lockZ","group","limiter","clock","camera","isReady","current","prev","x","rotation","y","z","lookAt","position"],"mappings":";;;;;;AAAA,SAAoBA,MAApB,QAAkC,OAAlC;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,UAAT,QAA2B,UAA3B;;AASA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAkB;AAAA;;AAAA,MAC3BC,QAD2B,GAC+BD,KAD/B,CAC3BC,QAD2B;AAAA,qBAC+BD,KAD/B,CACjBE,KADiB;AAAA,MACjBA,KADiB,6BACT,KADS;AAAA,qBAC+BF,KAD/B,CACFG,KADE;AAAA,MACFA,KADE,6BACM,KADN;AAAA,qBAC+BH,KAD/B,CACaI,KADb;AAAA,MACaA,KADb,6BACqB,KADrB;AAGnC,MAAMC,KAAK,GAAGT,MAAM,EAApB;AACA,MAAMU,OAAO,GAAGR,UAAU,CAAC,EAAD,CAA1B;AAEAD,EAAAA,QAAQ,CAAC,gBAAuB;AAAA,QAApBU,KAAoB,QAApBA,KAAoB;AAAA,QAAbC,MAAa,QAAbA,MAAa;AAC9B,QAAI,CAACF,OAAO,CAACG,OAAR,CAAgBF,KAAhB,CAAL,EAA6B;;AAE7B,QAAIF,KAAK,CAACK,OAAV,EAAmB;AACjB,UAAMC,IAAI,GAAG;AACXC,QAAAA,CAAC,EAAEP,KAAK,CAACK,OAAN,CAAcG,QAAd,CAAuBD,CADf;AAEXE,QAAAA,CAAC,EAAET,KAAK,CAACK,OAAN,CAAcG,QAAd,CAAuBC,CAFf;AAGXC,QAAAA,CAAC,EAAEV,KAAK,CAACK,OAAN,CAAcG,QAAd,CAAuBE;AAHf,OAAb;AAKAV,MAAAA,KAAK,CAACK,OAAN,CAAcM,MAAd,CAAqBR,MAAM,CAACS,QAA5B;AACA,UAAIf,KAAJ,EAAWG,KAAK,CAACK,OAAN,CAAcG,QAAd,CAAuBD,CAAvB,GAA2BD,IAAI,CAACC,CAAhC;AACX,UAAIT,KAAJ,EAAWE,KAAK,CAACK,OAAN,CAAcG,QAAd,CAAuBC,CAAvB,GAA2BH,IAAI,CAACG,CAAhC;AACX,UAAIV,KAAJ,EAAWC,KAAK,CAACK,OAAN,CAAcG,QAAd,CAAuBE,CAAvB,GAA2BJ,IAAI,CAACI,CAAhC;AACZ;AACF,GAdO,CAAR;AAgBA,sBAAO;AAAO,IAAA,GAAG,EAAEV,KAAZ;AAAA,cAAoBJ;AAApB;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAvBD;;GAAMF,U;UAIYD,U,EAEhBD,Q;;;KANIE,U;AAyBN,eAAeA,UAAf","sourcesContent":["import { ReactNode, useRef } from \"react\";\nimport { Group } from \"three\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { useLimiter } from \"spacesvr\";\n\ntype Props = {\n  children: ReactNode;\n  lockX?: boolean;\n  lockY?: boolean;\n  lockZ?: boolean;\n};\n\nconst FacePlayer = (props: Props) => {\n  const { children, lockX = false, lockY = false, lockZ = false } = props;\n\n  const group = useRef<Group>();\n  const limiter = useLimiter(60);\n\n  useFrame(({ clock, camera }) => {\n    if (!limiter.isReady(clock)) return;\n\n    if (group.current) {\n      const prev = {\n        x: group.current.rotation.x,\n        y: group.current.rotation.y,\n        z: group.current.rotation.z,\n      };\n      group.current.lookAt(camera.position);\n      if (lockX) group.current.rotation.x = prev.x;\n      if (lockY) group.current.rotation.y = prev.y;\n      if (lockZ) group.current.rotation.z = prev.z;\n    }\n  });\n\n  return <group ref={group}>{children}</group>;\n};\n\nexport default FacePlayer;\n"]},"metadata":{},"sourceType":"module"}