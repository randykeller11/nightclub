{"ast":null,"code":"import { useFrame } from \"@react-three/fiber\";\nimport { useMemo, useState } from \"react\";\nimport { Vector3 } from \"three\";\nimport { useLimiter } from \"spacesvr\";\nexport const useProximity = group => {\n  const dummy = useMemo(() => new Vector3(), []);\n  const {\n    0: state,\n    1: setState\n  } = useState(\"idle\");\n  const limiter = useLimiter(20);\n  useFrame(({\n    camera,\n    clock\n  }) => {\n    if (!group.current || !limiter.isReady(clock)) return;\n    const worldPos = group.current.getWorldPosition(dummy);\n    const dist = camera.position.distanceTo(worldPos);\n    if (dist < 1.75) setState(\"speaking\");else if (dist < 2) setState(\"visible\");else if (dist >= 2) setState(\"idle\");\n  });\n  return {\n    idle: state === \"idle\",\n    visible: state === \"visible\",\n    speaking: state === \"speaking\"\n  };\n};","map":{"version":3,"sources":["/Users/dub_ceo/Desktop/spacesvr-starter/src/ideas/Builder12/utils/proximity.ts"],"names":["useFrame","useMemo","useState","Vector3","useLimiter","useProximity","group","dummy","state","setState","limiter","camera","clock","current","isReady","worldPos","getWorldPosition","dist","position","distanceTo","idle","visible","speaking"],"mappings":"AAAA,SAASA,QAAT,QAAyB,oBAAzB;AACA,SAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,UAAT,QAA2B,UAA3B;AAUA,OAAO,MAAMC,YAAY,GACvBC,KAD0B,IAEP;AACnB,QAAMC,KAAK,GAAGN,OAAO,CAAC,MAAM,IAAIE,OAAJ,EAAP,EAAsB,EAAtB,CAArB;AAEA,QAAM;AAAA,OAACK,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAQ,MAAR,CAAlC;AAEA,QAAMQ,OAAO,GAAGN,UAAU,CAAC,EAAD,CAA1B;AACAJ,EAAAA,QAAQ,CAAC,CAAC;AAAEW,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD,KAAuB;AAC9B,QAAI,CAACN,KAAK,CAACO,OAAP,IAAkB,CAACH,OAAO,CAACI,OAAR,CAAgBF,KAAhB,CAAvB,EAA+C;AAE/C,UAAMG,QAAQ,GAAGT,KAAK,CAACO,OAAN,CAAcG,gBAAd,CAA+BT,KAA/B,CAAjB;AACA,UAAMU,IAAI,GAAGN,MAAM,CAACO,QAAP,CAAgBC,UAAhB,CAA2BJ,QAA3B,CAAb;AACA,QAAIE,IAAI,GAAG,IAAX,EAAiBR,QAAQ,CAAC,UAAD,CAAR,CAAjB,KACK,IAAIQ,IAAI,GAAG,CAAX,EAAcR,QAAQ,CAAC,SAAD,CAAR,CAAd,KACA,IAAIQ,IAAI,IAAI,CAAZ,EAAeR,QAAQ,CAAC,MAAD,CAAR;AACrB,GARO,CAAR;AAUA,SAAO;AACLW,IAAAA,IAAI,EAAEZ,KAAK,KAAK,MADX;AAELa,IAAAA,OAAO,EAAEb,KAAK,KAAK,SAFd;AAGLc,IAAAA,QAAQ,EAAEd,KAAK,KAAK;AAHf,GAAP;AAKD,CAvBM","sourcesContent":["import { useFrame } from \"@react-three/fiber\";\nimport { RefObject, useMemo, useState } from \"react\";\nimport { Group, Vector3 } from \"three\";\nimport { useLimiter } from \"spacesvr\";\n\ntype ProximityState = {\n  idle: boolean;\n  visible: boolean;\n  speaking: boolean;\n};\n\ntype State = \"idle\" | \"visible\" | \"speaking\";\n\nexport const useProximity = (\n  group: RefObject<Group | undefined>\n): ProximityState => {\n  const dummy = useMemo(() => new Vector3(), []);\n\n  const [state, setState] = useState<State>(\"idle\");\n\n  const limiter = useLimiter(20);\n  useFrame(({ camera, clock }) => {\n    if (!group.current || !limiter.isReady(clock)) return;\n\n    const worldPos = group.current.getWorldPosition(dummy);\n    const dist = camera.position.distanceTo(worldPos);\n    if (dist < 1.75) setState(\"speaking\");\n    else if (dist < 2) setState(\"visible\");\n    else if (dist >= 2) setState(\"idle\");\n  });\n\n  return {\n    idle: state === \"idle\",\n    visible: state === \"visible\",\n    speaking: state === \"speaking\",\n  };\n};\n"]},"metadata":{},"sourceType":"module"}