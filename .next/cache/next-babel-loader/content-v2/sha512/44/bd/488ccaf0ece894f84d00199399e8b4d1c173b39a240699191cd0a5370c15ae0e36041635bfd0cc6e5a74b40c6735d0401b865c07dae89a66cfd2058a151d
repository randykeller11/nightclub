{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dub_ceo/Desktop/nightclub/src/worlds/Starter.tsx\";\nimport { useEffect } from \"react\";\nimport { StandardEnvironment } from \"spacesvr\";\nimport TransparentFloor from \"../ideas/TransparentFloor\";\nimport CloudySky from \"../ideas/CloudySky\";\nimport AnimatedSpeaker1 from \"../components/AnimatedSpeaker1\";\nimport AnimatedSpeaker2 from \"../components/AnimatedSpeaker2\";\nimport useColorStore from \"../stores/colorStore\";\nexport default function Starter() {\n  const colors = [\"orange\", \"lightBlue\", \"red\", \"purple\", \"green\"];\n  const colorStore = useColorStore();\n  useEffect(() => {\n    console.log(colorStore.color);\n    setTimeout(() => {\n      if (colorStore.color < 4) {\n        colorStore.setColor(colorStore.color + 1);\n      } else {\n        colorStore.setColor(0);\n      }\n    }, 4000);\n  }, [colorStore.color]);\n  return /*#__PURE__*/_jsxDEV(StandardEnvironment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatedSpeaker1, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatedSpeaker2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CloudySky, {\n      color: \"lightblue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransparentFloor, {\n      opacity: 0.7\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/dub_ceo/Desktop/nightclub/src/worlds/Starter.tsx"],"names":["useEffect","StandardEnvironment","TransparentFloor","CloudySky","AnimatedSpeaker1","AnimatedSpeaker2","useColorStore","Starter","colors","colorStore","console","log","color","setTimeout","setColor"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAA6BC,mBAA7B,QAAwD,UAAxD;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAMC,MAAM,GAAG,CAAC,QAAD,EAAW,WAAX,EAAwB,KAAxB,EAA+B,QAA/B,EAAyC,OAAzC,CAAf;AACA,QAAMC,UAAU,GAAGH,aAAa,EAAhC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAU,CAACG,KAAvB;AACAC,IAAAA,UAAU,CAAC,MAAM;AACf,UAAIJ,UAAU,CAACG,KAAX,GAAmB,CAAvB,EAA0B;AACxBH,QAAAA,UAAU,CAACK,QAAX,CAAoBL,UAAU,CAACG,KAAX,GAAmB,CAAvC;AACD,OAFD,MAEO;AACLH,QAAAA,UAAU,CAACK,QAAX,CAAoB,CAApB;AACD;AACF,KANS,EAMP,IANO,CAAV;AAOD,GATQ,EASN,CAACL,UAAU,CAACG,KAAZ,CATM,CAAT;AAWA,sBACE,QAAC,mBAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAA3B;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD","sourcesContent":["import { useEffect } from \"react\";\nimport { Spinning, Floating, StandardEnvironment } from \"spacesvr\";\nimport TransparentFloor from \"../ideas/TransparentFloor\";\nimport CloudySky from \"../ideas/CloudySky\";\nimport AnimatedSpeaker1 from \"../components/AnimatedSpeaker1\";\nimport AnimatedSpeaker2 from \"../components/AnimatedSpeaker2\";\nimport useColorStore from \"../stores/colorStore\";\n\nexport default function Starter() {\n  const colors = [\"orange\", \"lightBlue\", \"red\", \"purple\", \"green\"];\n  const colorStore = useColorStore();\n\n  useEffect(() => {\n    console.log(colorStore.color);\n    setTimeout(() => {\n      if (colorStore.color < 4) {\n        colorStore.setColor(colorStore.color + 1);\n      } else {\n        colorStore.setColor(0);\n      }\n    }, 4000);\n  }, [colorStore.color]);\n\n  return (\n    <StandardEnvironment>\n      <ambientLight />\n      <AnimatedSpeaker1 />\n      <AnimatedSpeaker2 />\n\n      <CloudySky color=\"lightblue\" />\n      <TransparentFloor opacity={0.7} />\n    </StandardEnvironment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}