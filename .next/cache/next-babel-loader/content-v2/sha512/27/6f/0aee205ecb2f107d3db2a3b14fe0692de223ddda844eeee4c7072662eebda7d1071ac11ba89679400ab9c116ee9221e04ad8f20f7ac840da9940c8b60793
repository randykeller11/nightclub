{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dub_ceo/Desktop/spacesvr-starter/src/ideas/Builder12/layers/communication/visual/VisualInteraction/components/VisualDecision.tsx\";\nimport { Box } from \"@react-three/flex\";\nimport FacePlayer from \"../../modifiers/FacePlayer\";\nimport { useContext } from \"react\";\nimport { DialogueContext } from \"../../VisualDialogue\";\nimport Button from \"../../components/Button\";\nimport { getIdeaFromDecision } from \"../../../utils/helper\";\nexport default function VisualDecision(props) {\n  const decision = Object.assign({}, props);\n  const {\n    setKey\n  } = useContext(DialogueContext);\n  const WIDTH = decision.name.length * 0.2825 + 0.275;\n  const idea = getIdeaFromDecision(decision);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    marginTop: 0.01,\n    marginBottom: 0.01,\n    marginLeft: 0.05,\n    marginRight: 0.05,\n    width: WIDTH * 0.1,\n    height: 0.1,\n    centerAnchor: true,\n    children: /*#__PURE__*/_jsxDEV(FacePlayer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        width: WIDTH,\n        idea: idea,\n        onClick: () => {\n          if (decision.onClick) decision.onClick();\n          if (decision.nextKey) setKey(decision.nextKey || \"\");\n        },\n        children: decision.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, `${decision.name}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/dub_ceo/Desktop/spacesvr-starter/src/ideas/Builder12/layers/communication/visual/VisualInteraction/components/VisualDecision.tsx"],"names":["Box","FacePlayer","useContext","DialogueContext","Button","getIdeaFromDecision","VisualDecision","props","decision","setKey","WIDTH","name","length","idea","onClick","nextKey"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,mBAAT,QAAoC,uBAApC;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAAyC;AACtD,QAAWC,QAAX,qBAAwBD,KAAxB;AAEA,QAAM;AAAEE,IAAAA;AAAF,MAAaP,UAAU,CAACC,eAAD,CAA7B;AAEA,QAAMO,KAAK,GAAGF,QAAQ,CAACG,IAAT,CAAcC,MAAd,GAAuB,MAAvB,GAAgC,KAA9C;AACA,QAAMC,IAAI,GAAGR,mBAAmB,CAACG,QAAD,CAAhC;AAEA,sBACE,QAAC,GAAD;AACE,IAAA,SAAS,EAAE,IADb;AAEE,IAAA,YAAY,EAAE,IAFhB;AAGE,IAAA,UAAU,EAAE,IAHd;AAIE,IAAA,WAAW,EAAE,IAJf;AAKE,IAAA,KAAK,EAAEE,KAAK,GAAG,GALjB;AAME,IAAA,MAAM,EAAE,GANV;AAOE,IAAA,YAAY,MAPd;AAAA,2BASE,QAAC,UAAD;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,KAAK,EAAEA,KADT;AAEE,QAAA,IAAI,EAAEG,IAFR;AAGE,QAAA,OAAO,EAAE,MAAM;AACb,cAAIL,QAAQ,CAACM,OAAb,EAAsBN,QAAQ,CAACM,OAAT;AACtB,cAAIN,QAAQ,CAACO,OAAb,EAAsBN,MAAM,CAACD,QAAQ,CAACO,OAAT,IAAoB,EAArB,CAAN;AACvB,SANH;AAAA,kBAQGP,QAAQ,CAACG;AARZ;AAAA;AAAA;AAAA;AAAA;AADF,OAAkB,GAAEH,QAAQ,CAACG,IAAK,EAAlC;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD","sourcesContent":["import { Box } from \"@react-three/flex\";\nimport FacePlayer from \"../../modifiers/FacePlayer\";\nimport { Decision } from \"../../../index\";\nimport { useContext } from \"react\";\nimport { DialogueContext } from \"../../VisualDialogue\";\nimport Button from \"../../components/Button\";\nimport { getIdeaFromDecision } from \"../../../utils/helper\";\n\nexport default function VisualDecision(props: Decision) {\n  const { ...decision } = props;\n\n  const { setKey } = useContext(DialogueContext);\n\n  const WIDTH = decision.name.length * 0.2825 + 0.275;\n  const idea = getIdeaFromDecision(decision);\n\n  return (\n    <Box\n      marginTop={0.01}\n      marginBottom={0.01}\n      marginLeft={0.05}\n      marginRight={0.05}\n      width={WIDTH * 0.1}\n      height={0.1}\n      centerAnchor\n    >\n      <FacePlayer key={`${decision.name}`}>\n        <Button\n          width={WIDTH}\n          idea={idea}\n          onClick={() => {\n            if (decision.onClick) decision.onClick();\n            if (decision.nextKey) setKey(decision.nextKey || \"\");\n          }}\n        >\n          {decision.name}\n        </Button>\n      </FacePlayer>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}